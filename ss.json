{
  "info": {
    "name": "Arduino Alert Monitor API",
    "description": "API –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–≤–æ–≥–∞–º–∏ Arduino Security System",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "alert_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "device_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üö® Alert Monitor Dashboard",
      "item": [
        {
          "name": "Get All Alerts (Monitor View)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const alerts = pm.response.json();",
                  "    console.log(`Found ${alerts.length} alerts`);",
                  "    if (alerts.length > 0) {",
                  "        pm.collectionVariables.set('alert_id', alerts[0].id);",
                  "        console.log('First alert ID saved:', alerts[0].id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/monitor/alerts/",
              "host": ["{{base_url}}"],
              "path": ["monitor", "alerts", ""],
              "query": [
                {
                  "key": "limit",
                  "value": "50",
                  "description": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–≤–æ–≥",
                  "disabled": true
                }
              ]
            },
            "description": "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç—Ä–µ–≤–æ–≥–∏ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
          },
          "response": []
        },
        {
          "name": "Get Unacknowledged Alerts Only",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/monitor/alerts/?acknowledged=false&limit=20",
              "host": ["{{base_url}}"],
              "path": ["monitor", "alerts", ""],
              "query": [
                {
                  "key": "acknowledged",
                  "value": "false"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ç—Ä–µ–≤–æ–≥–∏"
          },
          "response": []
        },
        {
          "name": "Filter Alerts by Type - Motion",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/monitor/alerts/?type=motion",
              "host": ["{{base_url}}"],
              "path": ["monitor", "alerts", ""],
              "query": [
                {
                  "key": "type",
                  "value": "motion"
                }
              ]
            },
            "description": "–§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É —Ç—Ä–µ–≤–æ–≥–∏ - –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è"
          },
          "response": []
        },
        {
          "name": "Filter Alerts by Type - Panic",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/monitor/alerts/?type=panic",
              "host": ["{{base_url}}"],
              "path": ["monitor", "alerts", ""],
              "query": [
                {
                  "key": "type",
                  "value": "panic"
                }
              ]
            },
            "description": "–§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É —Ç—Ä–µ–≤–æ–≥–∏ - –ø–∞–Ω–∏—á–µ—Å–∫–∞—è –∫–Ω–æ–ø–∫–∞"
          },
          "response": []
        },
        {
          "name": "Filter Alerts by Device",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/monitor/alerts/?device_id={{device_id}}",
              "host": ["{{base_url}}"],
              "path": ["monitor", "alerts", ""],
              "query": [
                {
                  "key": "device_id",
                  "value": "{{device_id}}"
                }
              ]
            },
            "description": "–§–∏–ª—å—Ç—Ä —Ç—Ä–µ–≤–æ–≥ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìä Statistics & Analytics",
      "item": [
        {
          "name": "Get Alert Statistics",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/monitor/stats/",
              "host": ["{{base_url}}"],
              "path": ["monitor", "stats", ""]
            },
            "description": "–ü–æ–ª—É—á–∏—Ç—å –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç—Ä–µ–≤–æ–≥–∞–º"
          },
          "response": []
        },
        {
          "name": "Get Active Devices List",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const devices = pm.response.json();",
                  "    console.log(`Found ${devices.length} active devices`);",
                  "    if (devices.length > 0) {",
                  "        pm.collectionVariables.set('device_id', devices[0].id);",
                  "        console.log('First device ID saved:', devices[0].id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/monitor/devices/",
              "host": ["{{base_url}}"],
              "path": ["monitor", "devices", ""]
            },
            "description": "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö Arduino —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —Å –∏—Ö —Å—Ç–∞—Ç—É—Å–æ–º"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîç Alert Details & Management",
      "item": [
        {
          "name": "Get Alert Details",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/monitor/alerts/{{alert_id}}/",
              "host": ["{{base_url}}"],
              "path": ["monitor", "alerts", "{{alert_id}}", ""]
            },
            "description": "–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç—Ä–µ–≤–æ–≥–µ"
          },
          "response": []
        },
        {
          "name": "Acknowledge Single Alert",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"is_acknowledged\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/monitor/alerts/{{alert_id}}/",
              "host": ["{{base_url}}"],
              "path": ["monitor", "alerts", "{{alert_id}}", ""]
            },
            "description": "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç—Ä–µ–≤–æ–≥–∏"
          },
          "response": []
        },
        {
          "name": "Bulk Acknowledge Alerts",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"alert_ids\": [1, 2, 3, 4, 5]\n}"
            },
            "url": {
              "raw": "{{base_url}}/monitor/alerts/acknowledge/",
              "host": ["{{base_url}}"],
              "path": ["monitor", "alerts", "acknowledge", ""]
            },
            "description": "–ú–∞—Å—Å–æ–≤–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç—Ä–µ–≤–æ–≥ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üéØ Real-time Monitoring Scenarios",
      "item": [
        {
          "name": "Dashboard Refresh (All Data)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞",
                  "const stats = pm.sendRequest({",
                  "    url: pm.collectionVariables.get('base_url') + '/monitor/stats/',",
                  "    method: 'GET',",
                  "    header: {",
                  "        'Authorization': 'Bearer ' + pm.collectionVariables.get('access_token')",
                  "    }",
                  "}, function (err, response) {",
                  "    if (response.code === 200) {",
                  "        const stats = response.json();",
                  "        console.log('=== DASHBOARD STATS ===');",
                  "        console.log('Total alerts:', stats.total_alerts);",
                  "        console.log('Unacknowledged:', stats.unacknowledged_alerts);",
                  "        console.log('Alerts today:', stats.alerts_today);",
                  "        console.log('Most active device:', stats.most_active_device);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/monitor/alerts/?limit=10",
              "host": ["{{base_url}}"],
              "path": ["monitor", "alerts", ""],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
          },
          "response": []
        },
        {
          "name": "Emergency Response Check",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/monitor/alerts/?type=panic&acknowledged=false",
              "host": ["{{base_url}}"],
              "path": ["monitor", "alerts", ""],
              "query": [
                {
                  "key": "type",
                  "value": "panic"
                },
                {
                  "key": "acknowledged",
                  "value": "false"
                }
              ]
            },
            "description": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ (–ø–∞–Ω–∏–∫–∞)"
          },
          "response": []
        },
        {
          "name": "Security Breach Check",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/monitor/alerts/?type=glass&acknowledged=false",
              "host": ["{{base_url}}"],
              "path": ["monitor", "alerts", ""],
              "query": [
                {
                  "key": "type",
                  "value": "glass"
                },
                {
                  "key": "acknowledged",
                  "value": "false"
                }
              ]
            },
            "description": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ –≤–∑–ª–æ–º–∞ (—Ä–∞–∑–±–∏—Ç–∏–µ —Å—Ç–µ–∫–ª–∞)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üß™ Test Data Generation",
      "item": [
        {
          "name": "Generate Test Alert - Motion",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{device_token}}\",\n  \"pir_motion\": true,\n  \"glass_break\": false,\n  \"door_open\": false,\n  \"panic_button\": false,\n  \"temperature\": 22.5,\n  \"humidity\": 68.3\n}"
            },
            "url": {
              "raw": "{{base_url}}/sensor/data/",
              "host": ["{{base_url}}"],
              "path": ["sensor", "data", ""]
            },
            "description": "–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–µ–≤–æ–≥—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
          },
          "response": []
        },
        {
          "name": "Generate Test Alert - Panic Emergency",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{device_token}}\",\n  \"pir_motion\": false,\n  \"glass_break\": false,\n  \"door_open\": false,\n  \"panic_button\": true,\n  \"temperature\": 23.1,\n  \"humidity\": 65.7\n}"
            },
            "url": {
              "raw": "{{base_url}}/sensor/data/",
              "host": ["{{base_url}}"],
              "path": ["sensor", "data", ""]
            },
            "description": "–°–æ–∑–¥–∞—Ç—å —ç–∫—Å—Ç—Ä–µ–Ω–Ω—É—é —Ç—Ä–µ–≤–æ–≥—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞",
          "if (pm.request.url.toString().includes('/token/') === false) {",
          "    const accessToken = pm.collectionVariables.get('access_token');",
          "    if (!accessToken) {",
          "        console.log('‚ö†Ô∏è No access token found. Please login first.');",
          "    }",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤",
          "if (pm.response.code >= 400) {",
          "    console.log('‚ùå Error Response:', pm.response.json());",
          "} else if (pm.response.code >= 200 && pm.response.code < 300) {",
          "    console.log('‚úÖ Request successful');",
          "}"
        ]
      }
    }
  ]
}